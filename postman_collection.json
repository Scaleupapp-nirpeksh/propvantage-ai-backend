{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-4a7b-8c9d-1f2a3b4c5d6e",
		"name": "PropVantage AI - V1.1 Comprehensive Test Suite",
		"description": "A full test suite for the PropVantage AI backend API (V1.1), covering all endpoints including user management, file uploads, and analytics.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Authentication",
			"item": [
				{
					"name": "Register New Org & Business Head",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Response has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.be.a('string');",
									"    pm.environment.set(\"jwt_token_admin\", jsonData.token);",
									"    pm.environment.set(\"orgId\", jsonData.organization._id);",
									"    pm.environment.set(\"adminUserId\", jsonData._id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orgName\": \"PropVantage Estates {{timestamp}}\",\n    \"country\": \"India\",\n    \"city\": \"Bengaluru\",\n    \"firstName\": \"Admin\",\n    \"lastName\": \"User\",\n    \"email\": \"admin.{{timestamp}}@propvantage.com\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register with Existing Email [NEGATIVE]",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"orgName\": \"Another Corp {{timestamp}}\",\n    \"country\": \"India\",\n    \"city\": \"Bengaluru\",\n    \"firstName\": \"Admin\",\n    \"lastName\": \"User\",\n    \"email\": \"admin.{{timestamp}}@propvantage.com\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as Admin User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Set Admin JWT as environment variable\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"jwt_token_admin\", jsonData.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin.{{timestamp}}@propvantage.com\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2. User Management (V1.1)",
			"item": [
				{
					"name": "Invite Sales Executive",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Save Sales Exec Info\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"salesExecId\", jsonData._id);",
									"    pm.environment.set(\"salesExecEmail\", jsonData.email);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Priya\",\n    \"lastName\": \"Singh\",\n    \"email\": \"priya.singh.{{timestamp}}@propvantage.com\",\n    \"role\": \"Sales Executive\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/users/invite",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users",
								"invite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Setup (Projects, Units, Leads)",
			"item": [
				{
					"name": "Create Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Save Project ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"projectId\", jsonData._id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"PropVantage Heights\",\n    \"type\": \"apartment\",\n    \"totalUnits\": 100,\n    \"targetRevenue\": 1000000000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Unit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Save Unit ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"unitId\", jsonData._id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"project\": \"{{projectId}}\",\n    \"unitNumber\": \"B-707\",\n    \"type\": \"2BHK\",\n    \"floor\": 7,\n    \"areaSqft\": 1200,\n    \"basePrice\": 9500000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/units",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"units"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create & Assign Lead",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () { pm.response.to.have.status(201); });",
									"pm.test(\"Save Lead ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"leadId\", jsonData._id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"project\": \"{{projectId}}\",\n    \"firstName\": \"Rohan\",\n    \"phone\": \"9988776655\",\n    \"source\": \"Property Portal\",\n    \"assignedTo\": \"{{salesExecId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/leads",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"leads"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Core Sales Flow",
			"item": [
				{
					"name": "Add Interaction to Lead",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"Call\",\n    \"direction\": \"Outbound\",\n    \"content\": \"Called the customer. They are very interested and want to schedule a site visit for this weekend.\",\n    \"outcome\": \"Site visit scheduled\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/leads/{{leadId}}/interactions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"leads",
								"{{leadId}}",
								"interactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get AI Sales Insights",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/ai/leads/{{leadId}}/insights",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"ai",
								"leads",
								"{{leadId}}",
								"insights"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate Cost Sheet",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"discountPercentage\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/pricing/cost-sheet/{{unitId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"pricing",
								"cost-sheet",
								"{{unitId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Sale (Book Unit)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"unitId\": \"{{unitId}}\",\n    \"leadId\": \"{{leadId}}\",\n    \"discountPercentage\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/sales",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"sales"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5. File Management (V1.1)",
			"item": [
				{
					"name": "Upload Project Brochure",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "resourceType",
									"value": "Project",
									"type": "text"
								},
								{
									"key": "associatedResource",
									"value": "{{projectId}}",
									"type": "text"
								},
								{
									"key": "category",
									"value": "Brochure",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:3000/api/files/upload",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"files",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Files for Project",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/files/resource/{{projectId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"files",
								"resource",
								"{{projectId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "6. RBAC & Negative Tests",
			"item": [
				{
					"name": "Login as Sales Executive",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"pm.test(\"Set Sales Exec JWT\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"jwt_token_sales_exec\", jsonData.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{salesExecEmail}}\",\n    \"password\": \"{{salesExecEmail}}{{timestamp}}\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test as Sales Exec",
					"item": [
						{
							"name": "Get My Leads (Success)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"pm.test(\"Should return one lead\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData).to.be.an('array');",
											"    pm.expect(jsonData.length).to.eql(1);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token_sales_exec}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/leads",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"leads"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Project (Forbidden) [NEGATIVE]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () { pm.response.to.have.status(403); });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token_sales_exec}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Illegal Project\",\n    \"type\": \"apartment\",\n    \"totalUnits\": 10,\n    \"targetRevenue\": 100000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"projects"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "7. Analytics (V1.1)",
			"item": [
				{
					"name": "Get Sales Summary",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/analytics/sales-summary",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"analytics",
								"sales-summary"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Lead Funnel",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token_admin}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/analytics/lead-funnel",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"analytics",
								"lead-funnel"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// This script runs before every request and creates a unique timestamp",
					"// This is useful for creating unique emails/org names during testing",
					"pm.environment.set(\"timestamp\", new Date().getTime());"
				]
			}
		}
	],
	"variable": [
		{
			"key": "jwt_token_admin",
			"value": ""
		},
		{
			"key": "jwt_token_sales_exec",
			"value": ""
		},
		{
			"key": "orgId",
			"value": ""
		},
		{
			"key": "adminUserId",
			"value": ""
		},
		{
			"key": "salesExecId",
			"value": ""
		},
		{
			"key": "salesExecEmail",
			"value": ""
		},
		{
			"key": "projectId",
			"value": ""
		},
		{
			"key": "unitId",
			"value": ""
		},
		{
			"key": "leadId",
			"value": ""
		}
	]
}
